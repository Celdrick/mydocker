name: Docker Image Sync

on:
  schedule:
    - cron: '0 */3 * * *'  # 每3小时运行一次
  push:
    branches: [ main ]
  repository_dispatch:
    types: [sync-images]

jobs:
  sync-to-aliyun:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Pull and Push to Aliyun Registry
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_DB: ${{ secrets.MYSQL_DB }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
          ALIYUN_NAME_SPACE: ${{ secrets.ALIYUN_NAME_SPACE }}
          ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
          ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
        run: |
          python scripts/sync_images.py --target aliyun

  sync-to-private:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure Docker for insecure registry
        run: |
          echo '{
            "insecure-registries": ["${{ secrets.MY_REGISTRY }}"]
          }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Pull and Push to Private Registry
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_DB: ${{ secrets.MYSQL_DB }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MY_REGISTRY: ${{ secrets.MY_REGISTRY }}
          MY_REGISTRY_USER: ${{ secrets.MY_REGISTRY_USER }}
          MY_REGISTRY_PASSWORD: ${{ secrets.MY_REGISTRY_PASSWORD }}
        run: |
          python scripts/sync_images.py --target private
