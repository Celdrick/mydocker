name: Docker Image Sync

on:
  # push:
  #   branches: [ main ]
  repository_dispatch:
    types: [sync-images]

jobs:
  sync-images:
    runs-on: ubuntu-latest
    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
      
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          build-mount-path: '/var/lib/docker/'
      
      - name: Restart Docker
        run: sudo service docker restart
      
      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
        
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mysql-connector-python

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull and Push to Aliyun Registry
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_DB: ${{ secrets.MYSQL_DB }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
          ALIYUN_NAME_SPACE: ${{ secrets.ALIYUN_NAME_SPACE }}
          ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
          ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
        run: |
          python scripts/sync_images.py --target aliyun

      - name: Configure Docker for insecure registry
        run: |
          echo '{
            "insecure-registries": ["${{ secrets.MY_REGISTRY }}"],
            "experimental": true
          }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      # - name: Pull and Push to Private Registry
      #   env:
      #     MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
      #     MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      #     MYSQL_DB: ${{ secrets.MYSQL_DB }}
      #     MYSQL_USER: ${{ secrets.MYSQL_USER }}
      #     MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      #     MY_REGISTRY: ${{ secrets.MY_REGISTRY }}
      #     MY_REGISTRY_USER: ${{ secrets.MY_REGISTRY_USER }}
      #     MY_REGISTRY_PASSWORD: ${{ secrets.MY_REGISTRY_PASSWORD }}
      #   run: |
      #     python scripts/sync_images.py --target private
